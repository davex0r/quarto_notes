<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Notebooks</title>
<link>https://notes.livingphysics.org/builds.html</link>
<atom:link href="https://notes.livingphysics.org/builds.xml" rel="self" type="application/rss+xml"/>
<description>Notes from the living physics Lab</description>
<generator>quarto-1.6.39</generator>
<lastBuildDate>Fri, 28 Feb 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>Recreating the Gal-His yeast system used to demonstrate adaptive reprogramming</title>
  <dc:creator>David Jordan</dc:creator>
  <dc:creator>Mihoko Tame</dc:creator>
  <link>https://notes.livingphysics.org/build_posts/gal-his_yeast_build/</link>
  <description><![CDATA[ 





<blockquote class="blockquote">
<p>A goal for the future would be to determine the extent of knowledge the cell has of itself and how it uses that knowledge in a thoughtful manner when challenged.</p>
<p>(McClintock 1984)</p>
</blockquote>
<p>This note describes how I am recreating the strain from the Braun lab <span class="citation" data-cites="Stolovicki2006-sd">&nbsp;[1]</span> used to demonstrate adaptive reprogramming to novel challenges in the yeast <em>Saccharomyces cerevisiae</em> Unfortunately the strain and plasmid were lost due to a freezer fault. This document is written informally but should be understandable to a reasonably interested secondary school student. For brevity, the main document uses standard scientific terminology, but these terms are explained in detail in the Procedures section.</p>
<section id="overview" class="level1">
<h1>Overview</h1>
<p>In the context of computing, one might think of a single celled organism like a very complex “look-up table”, that is a passive input output device that has been optimized by evolution over very long time scales to give an “optimal” response to an environmental input. In single cell metabolism, inspired by the early work of Monod, this point of view has been very powerful for understanding microbial metabolic regulation. However, the concept of cell learning proposes that cells are not simply look up tables, but are capable of more sophisticated computation. To make this concrete, let’s look at a simplified, idealized “circuit” involved in sugar utilisation. Yeast prefer to use glucose as a carbon source rather than galactose. Prefer here means a few things: First empirically, yeast grow about 50% slower on galactose (~0.4 doublings/hr) than on glucose (~0.2 doublings/hr). Second, yeast have a gene regulatory system called the “catabolite repression system” that turns off the GAL regulon (all the genes required to uptake and utilize galactose) in the presence of glucose. Interestingly, galactose does not seem to be a less efficient source of ATP, but the increased number of enzymes required to bring it into the glycolysis pathway compared to glucose (4 vs.&nbsp;1) seems to have made it the less preferred sugar. With this in mind, we can write down the input-output function for the two presence or absence of the two sugars (inputs) and the activity of the Gal promoter (output).</p>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Glucose</th>
<th>Galactose</th>
<th>Gal Promoter Activity</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>0</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="even">
<td>1</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="odd">
<td>1</td>
<td>1</td>
<td>0</td>
</tr>
<tr class="even">
<td>0</td>
<td>1</td>
<td>1</td>
</tr>
</tbody>
</table>
<p>Generating this behavior with combinatorial logic could be done as e.g.&nbsp;output = (NOT glucose) AND galactose.</p>
<p>With this view of a cell as a simple evolutionarily optimized input output function, we can ask what would happen if we take this regulatory system and tie its control to a different metabolic output, in this case, to the expression of an enzyme needed to make the amino acid histidine in a yeast that has no other way to make histidine. Then the yeast would face a challenge when grown in glucose, shutting down the promoter means shutting of is only source of histidine. The inherent logic would turn off the Gal promoter but the promoter being on is now required for the yeast to make histidine (and thus to continue to grow). This engineered strain is known as the “Gal-His system”. It was invented by the Braun lab <span class="citation" data-cites="Stolovicki2006-sd">&nbsp;[1]</span>. The traditional view is that genetic changes would be required to rewire the circuit and change the truth table, and that any strain that found the correct mutations to do this would grow and outcompete the others. However, what Braun and colleagues found was that yeast managed to find new steady states of gene expression that allowed the cells to overcome this challenge without mutations, even in single cells that were not dividing <span class="citation" data-cites="woronoffMetabolicCostRapid2020">&nbsp;[2]</span>. They called this “adaptive reprogramming”. This note describes recreating the “Gal-His System” as a tool to further investigate this phenomenon and probe the mechanisms and limits of the computational capacity of single cells.</p>
<section id="plasmid-reconstruction" class="level2">
<h2 class="anchored" data-anchor-id="plasmid-reconstruction">Plasmid Reconstruction</h2>
<p>The original plasmid was generated by cloning the His3 gene and a GFP gene into the dual expression plasmid <a href="https://www.agilent.com/en/product/protein-expression/protein-expression-vectors-kits/yeast-expression-vectors/pesc-yeast-epitope-tagging-vectors-232966">pESC-Leu</a> from Agilent. We will use the GFP originally used, a yeast optimized GFP called S65T, but one could use any mutationally optimized GFP originally introduced in <span class="citation" data-cites="cormackYeastenhancedGreenFluorescent1997">&nbsp;[3]</span>. Further information on optimized GFPs can be found in <span class="citation" data-cites="cormackFACSoptimizedMutantsGreen1996">&nbsp;[4]</span>, and a comparison of yeast optimized GFPs can be found in <span class="citation" data-cites="kaishimaExpressionVariedGFPs2016">&nbsp;[5]</span>. The plasmid has a Leucine selectable marker and a <img src="https://latex.codecogs.com/png.latex?2%5Cmu"> origin for yeast a and AmpR selective marker and <img src="https://latex.codecogs.com/png.latex?ori"> origin for growth in <em>E. coli</em>. The plasmid contains a bidirectional Gal1/Gal10 promoter and each promoter has a multiple cloning site (MCS).</p>
<section id="cloning" class="level3">
<h3 class="anchored" data-anchor-id="cloning">Cloning</h3>
<p>We have used the GFP (S65T) cloned from the <a href="https://www.addgene.org/20409/">pKEN GFP mut2</a> plasmid. The HIS3 gene was cloned from the plasmid <a href="https://www.snapgene.com/plasmids/yeast_plasmids/pRS313">pRS33</a>. MT designed forward and reverse PCR primers to introduce restriction sites for NotI and BglII into the amplified GFP sequence and ApaI and XhoI in the HIS3 gene. The GFP sequence was cloned into the pESC-Leu Gal10 MCS and the HIS3 into the Gal1 MCS in the bi-directional Gal1/Gal10 promoter. Cloning results were confirmed by whole plasmid sequencing.</p>
</section>
</section>
<section id="yeast-strains" class="level2">
<h2 class="anchored" data-anchor-id="yeast-strains">Yeast Strains</h2>
<p>It would be very simple to use store bought yeast for these experiments, and I plan to do that for simpler experiments where no genetic engineering is necessary, however, laboratory strains have many features that make genetic engineering muh easier, such as gene deletions that can be used as selectable markers. For these experiments, we need a yeast strain that cannot make its own Leucine, so that we can use the Lu selectable marker on the plasmid, as well as being unable to make histidine, so that Gal-His construct will be its sole source of histidine during adaptation trials.</p>
<p>The original experiments were done in a yeast strain designated as YPH499. Interestingly, in the supplemental information of this paper by <span class="citation" data-cites="bennettMetabolicGeneRegulation2008">&nbsp;[6]</span>, the authors note that this strain has “significantly impaired galactose uptake”. This strain is derived from S288C, which has a known defect in the GAL2 galactose permease gene (a transporter that brings galactose into the cell). The <em>GAL2</em> gene was supposed to have been repaired in YPH499 but the authors of the above note that there remain a number of point mutations in the coding sequence of the Gal2 galactose transporter compared to the strain K699. They provide evidence that galactose uptake is impaired in the YPH499 strain. We are using the W303 strain, which seems to have the same Gal2 sequence as the K699 stain save one residue at 369.</p>
<blockquote class="blockquote">
<p>Our sequencing results revealed nine point mutations in the YPH499 <em>GAL2</em> sequence, yielding the following five amino acid mutations: V8M P50S S90G Y369S R392H.</p>
</blockquote>
<p>They then use a fluorescent fusion GAL2p and show that is distribution is not uniform on the cell membrane in YPH499 as it is in another strain K699 which has teh <em>wild-type</em> <em>GAL</em> sequence. The strains I have easily available are the W303 strain and the BY4743 strains. The W303 strain is only 85.4% congenic with S288c (and thus with YPH499)</p>
<p>For Gal2, W303 is closer to K699 than to YPH499. For the residues noted, K699 has the residues [VPSYR], YPH499 has the residues [MSGSH] and our strain W303 has [VPSSR] according to publicly available <a href="https://www.yeastgenome.org/variant-viewer#/S000004071">sequencing data</a>.</p>
</section>
<section id="transformation" class="level2">
<h2 class="anchored" data-anchor-id="transformation">Transformation</h2>
<p>The completed pESC-Leu_Gal-His plasmid was transfected into competent yeast cells using the LiAc procedure <span class="citation" data-cites="itoTransformationIntactYeast1983">&nbsp;[7]</span>. We followed the protocols given in <span class="citation" data-cites="gietzFrozenCompetentYeast2007">&nbsp;[8]</span> for making competent cells, and then transformed them following the high-efficiency procedure in <span class="citation" data-cites="gietzHighefficiencyYeastTransformation2007">&nbsp;[9]</span>. The construct contains a Leucine selectable marker under the control of the native Leu promoter, and the W303 strain carries the <em>leu2-3</em> allele, therefore only cells successfully transformed will grow on minimal media plates without leucine. Directly after transformation, yeast were grown in recovery media and then plated on selection plates lacking leucine and containing glucose. A mock transformation was also carried out which did not contain any of the plasmid. The results of plating different volumes of the transformation mixture <img src="https://latex.codecogs.com/png.latex?(2%5Cmu%20l,%2020%5Cmu%20l,%20200%5Cmu%20l%20)"> are shown for both the control (<img src="https://latex.codecogs.com/png.latex?%5Cemptyset">) and the plasmid (Tx) after 3 days of growth at 30C.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://notes.livingphysics.org/build_posts/gal-his_yeast_build/images/transformation-leu.jpeg" class="img-fluid figure-img"></p>
<figcaption>Transformation results Leu- selection plates</figcaption>
</figure>
</div>
</section>
<section id="transition-to-galactose" class="level2">
<h2 class="anchored" data-anchor-id="transition-to-galactose">Transition to galactose</h2>
<p>After confirming that the plasmid was successfully transformed, the next step was to turn on the Gal1/10 promoter on the plasmid to ensure that both the HIS3 and GFP genes were cloned properly. To do this, cells were first grown for 3 days in minimal media without leucine and galactose as the sugar. After this culture grew to high OD, these cells were plated on to selection plates with galactose and without histidine. After 3 days, many colonies were seen on these plates, indicating that the HIS3 gene was working. Cells plated on glucose plates without histidine did not show any colonies. Finally fluorescence micrographs were take to ensure that the GFP was being expressed.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://notes.livingphysics.org/build_posts/gal-his_yeast_build/images/Project_Image002_ch00.jpg" class="img-fluid figure-img"></p>
<figcaption>GFP positive yeast, 40x magnification</figcaption>
</figure>
</div>
</section>
</section>
<section id="procedures" class="level1">
<h1>Procedures</h1>
<section id="cloning-1" class="level2">
<h2 class="anchored" data-anchor-id="cloning-1">Cloning</h2>
<section id="generating-the-dna-inserts" class="level3">
<h3 class="anchored" data-anchor-id="generating-the-dna-inserts">Generating the DNA inserts</h3>
<p>This usually involves either cutting the DNA out of an existing source using restriction enzymes<sup>1</sup>, having the DNA synthesized, or most commonly, amplifying it out of an existing source using the Polymerase Chain Reaction (PCR).</p>
<section id="pcr-amplification" class="level4">
<h4 class="anchored" data-anchor-id="pcr-amplification">PCR amplification</h4>
<p>Polymerase chain reaction, or <a href="https://en.wikipedia.org/wiki/Polymerase_chain_reaction">PCR</a> amplification is a procedure that uses a heat stable DNA polymerase from a thermophilic bacterium called <strong>Thermus aquaticus</strong> to make copies of a given sequence. To do this, special primers are designed that serve as a starting point for the polymerase to add nucleotides. These primers are designed to bind to the two single srtands of the DNA after it is denatured at high temperature. The Polymerase then extends both primers to the end of the fragment, yielding two new double stranded molecules. This procedure is repeated for 20-30 cycles to greatly amplify the number of molecules.</p>
</section>
</section>
<section id="plasmids" class="level3">
<h3 class="anchored" data-anchor-id="plasmids">Plasmids</h3>
<p>Plasmids are circles of DNA containing a sequence that tells a certain cell type to replicate it. These are known and origins of replication. Often plasmids have origins that alow them to be replicated in bacteria, as transforming bacteria and growing them is convenient way to <em>amplify</em> the plasmid. For example, the <a href="https://www.snapgene.com/plasmids/yeast_plasmids/pESC-LEU">pESC-Leu</a> plasmid that we hav used as a backbone for this work contains three origins shown in yellow in the the plasmid map. The bacterial double stranded DNA origin is denote <em>ori</em>. The <em>f1 ori</em> is a phage derived origin that allows for single stranded replication and packaging into a phage. Both of these operate in bacteria. The <img src="https://latex.codecogs.com/png.latex?2%5Cmu"> origin is the yeast replication origin. The identity of the origin control for example the plasmid copy number in the cell. In addition, cells usually cannot maintain reliably different plasmids with the same origin.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://notes.livingphysics.org/build_posts/gal-his_yeast_build/images/pESC-LEU.png" class="img-fluid figure-img"></p>
<figcaption>pESC-Leu PLasmid Map (from SnapGene)</figcaption>
</figure>
</div>
<p>For more information about plasmid origins of replication, see <a href="https://blog.addgene.org/plasmid-101-origin-of-replication">this Addgene article</a></p>
</section>
<section id="restriction-enzymes" class="level3">
<h3 class="anchored" data-anchor-id="restriction-enzymes">Restriction Enzymes</h3>
<p>Restriction enzymes are proteins that recognize a specific sequence in DNA and cleave the DNA in a predictable manner. Restriction enzymes can be purchased from <a href="https://www.neb.com/en-gb/products/restriction-endonucleases">New England Biolabs</a>.</p>
</section>
<section id="restriction-pcr" class="level3">
<h3 class="anchored" data-anchor-id="restriction-pcr">Restriction PCR</h3>
<p>Restriction sites can be introduced into PCR amplified inserts by designing primers which have a complementary binding region to the fragment to be amplified, and a non complementary region that contains the restriction enzyme recognition site. Usually, a few extra bases are added on the other side of the enzyme recognition site as well to make the enzyme more efficient at cutting the fragment. Below is a table of the PCR amplification primers used. Within the complementary region, the start codon ATG is indicated in uppercase.</p>
<table class="caption-top table">
<colgroup>
<col style="width: 28%">
<col style="width: 17%">
<col style="width: 14%">
<col style="width: 40%">
</colgroup>
<thead>
<tr class="header">
<th>Name</th>
<th style="text-align: left;">Extra Bases</th>
<th style="text-align: left;">RE Site</th>
<th style="text-align: left;">Complementary region</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>GFPs65t-NotI-FW</td>
<td style="text-align: left;">aaaacc</td>
<td style="text-align: left;">gcggccgc</td>
<td style="text-align: left;">atacatATGagtaaaggagaagaac</td>
</tr>
<tr class="even">
<td>GFPs65t-BglII-RV</td>
<td style="text-align: left;">aaaagg</td>
<td style="text-align: left;">agatct</td>
<td style="text-align: left;">ttatttgtatagttcatccatgcc</td>
</tr>
<tr class="odd">
<td>HIS3-ApaI-FW</td>
<td style="text-align: left;">aaaacc</td>
<td style="text-align: left;">gggccc</td>
<td style="text-align: left;">caaagATGacagagcagaaagc</td>
</tr>
<tr class="even">
<td>HIS3-XhoI-RV</td>
<td style="text-align: left;">aaaagg</td>
<td style="text-align: left;">ctcgag</td>
<td style="text-align: left;">ctacataagaacacctttggtgg</td>
</tr>
</tbody>
</table>
</section>
<section id="yeast-liquid-culture" class="level3">
<h3 class="anchored" data-anchor-id="yeast-liquid-culture">Yeast Liquid Culture</h3>
<section id="ypad" class="level4">
<h4 class="anchored" data-anchor-id="ypad">YPAD</h4>
<p>Yeast are easily grown in complex liquid media containing Yeast Extract, Peptone, Adenine, and Dextrose (D-Glucose), commonly abbreviated YPAD. 1x YPAD contains 1% (w/v) Bacto yeast extract, 2% (w/v) Bacto peptone. 2% (w/v) Glucose, and adenine hemisulfate 80 mg/l. For 1l of media, this corresponds to 10g yeast extract, 20g peptone, 20g Glucose, and 80mg adenine. #### Synthetic Dropout Media I am using Yeast Nitrogen Base and Complete Supplement Mixtures (CSM) from <a href="https://formedium.com/complete-supplement-mixture-csm-drop-outs/">Formedium</a>. The recipe for the YNB is as follows:</p>
<p>Formedium Yeast Nitrogen Base</p>
<div class="table-container" style="width: 50%; margin: auto;">
<table class="caption-top table">
<thead>
<tr class="header">
<th>Formula</th>
<th>mg/L</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Biotin</td>
<td>0.002</td>
</tr>
<tr class="even">
<td>Ca-Panthotenate</td>
<td>0.4</td>
</tr>
<tr class="odd">
<td>Folic acid</td>
<td>0.002</td>
</tr>
<tr class="even">
<td>Inositol</td>
<td>2</td>
</tr>
<tr class="odd">
<td>Nicotinic Acid (Niacin)</td>
<td>0.4</td>
</tr>
<tr class="even">
<td>p-Aminobenzoic Acid</td>
<td>0.2</td>
</tr>
<tr class="odd">
<td>Pyridoxine HCl</td>
<td>0.4</td>
</tr>
<tr class="even">
<td>Riboflavin</td>
<td>0.2</td>
</tr>
<tr class="odd">
<td>Thiamine HCl</td>
<td>0.4</td>
</tr>
<tr class="even">
<td>Boric Acid</td>
<td>0.5</td>
</tr>
<tr class="odd">
<td>Copper Sulfate</td>
<td>0.04</td>
</tr>
<tr class="even">
<td>Potassium Iodide</td>
<td>0.1</td>
</tr>
<tr class="odd">
<td>Ferric Chloride</td>
<td>0.2</td>
</tr>
<tr class="even">
<td>Manganese Sulfate</td>
<td>0.4</td>
</tr>
<tr class="odd">
<td>Sodium Molybdate</td>
<td>0.2</td>
</tr>
<tr class="even">
<td>Zinc Sulfate</td>
<td>0.4</td>
</tr>
<tr class="odd">
<td>Potassium Phosphate, monobasic</td>
<td>1000</td>
</tr>
<tr class="even">
<td>Magnesium Sulphate, anhydrous</td>
<td>500</td>
</tr>
<tr class="odd">
<td>Sodium Chloride</td>
<td>100</td>
</tr>
<tr class="even">
<td>Calcium Chloride, anhydrous</td>
<td>100</td>
</tr>
<tr class="odd">
<td>Ammonium Sulphate</td>
<td>5000</td>
</tr>
</tbody>
</table>
</div>
<p>Suspend <strong>6.9 g</strong> powdered medium in <strong>1 L</strong> distilled water.<br>
Store dry at room temperature.</p>
<p>The recipe per liter for the YNB from Sigma calls for 6.7g/l and in their work, Braun et al.&nbsp;used 1.7g/l for their plates and liquid media. Thus, we should use (1/7/6.7)*6.9=1.75g/l in our recreated recipe. Braun et al added 5g/l Ammonium Sulfate which corresponds to our YNB.</p>
<p>For the Complete supplement mixtures, Braun et al.&nbsp;used Sigma <a href="https://www.sigmaaldrich.com/GB/en/product/sigma/y2001">Synthetic dropout medium supplements Y2001</a> with all standard amino acids except for histidine, leucine, tryptophan and uracil. Each amino acid is present at a concentration of 76 mg/L. Other nutrients: Adenine (18 mg/L), inositol (76 mg/L), p-aminobenzoic acid (8 mg/L) and to which they added 0.006 g/liter L-tryptophan, and 0.003 g/liter uracil. Braun et al used the full 1.4g/l called for.</p>
<div class="table-container" style="width: 50%; margin: auto;">
<table class="caption-top table">
<thead>
<tr class="header">
<th>Formula</th>
<th>mg/L</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Adenine</td>
<td>10</td>
</tr>
<tr class="even">
<td>L-Arginine</td>
<td>50</td>
</tr>
<tr class="odd">
<td>L-Aspartic acid</td>
<td>80</td>
</tr>
<tr class="even">
<td>L-Histidine HCl</td>
<td>20</td>
</tr>
<tr class="odd">
<td>L-Isoleucine</td>
<td>50</td>
</tr>
<tr class="even">
<td>L-Leucine</td>
<td>100</td>
</tr>
<tr class="odd">
<td>L-Lysine HCl</td>
<td>50</td>
</tr>
<tr class="even">
<td>L-Methionine</td>
<td>20</td>
</tr>
<tr class="odd">
<td>L-Phenylalanine</td>
<td>50</td>
</tr>
<tr class="even">
<td>L-Threonine</td>
<td>100</td>
</tr>
<tr class="odd">
<td>L-Tryptophan</td>
<td>50</td>
</tr>
<tr class="even">
<td>L-Tyrosine</td>
<td>50</td>
</tr>
<tr class="odd">
<td>Uracil</td>
<td>20</td>
</tr>
<tr class="even">
<td>Valine</td>
<td>140</td>
</tr>
<tr class="odd">
<td><strong>TOTAL</strong></td>
<td><strong>790</strong></td>
</tr>
</tbody>
</table>
</div>
</section>
</section>
<section id="yeast-plating" class="level3">
<h3 class="anchored" data-anchor-id="yeast-plating">Yeast Plating</h3>
<p>Liquid cultures of yeast are diluted and spread on solid media plates in order to facilitate the selection of a colony, which is presumably generated from a single cell. This procedure <em>minimizes</em> genetic variation in the population of cells used to start a new culture, but also bottlenecks the culture (potentially fixing any mutations that have arisen). For this procedure to work, the liquid culture must be sufficiently diluted so that only <img src="https://latex.codecogs.com/png.latex?%5Capprox10%5E1-10%5E2"> cells are spread on each plate. The following will describe how to carry out this procedure.</p>
<section id="producing-solid-media-plates" class="level4">
<h4 class="anchored" data-anchor-id="producing-solid-media-plates">Producing solid media plates</h4>
<p>Generally the solid media used is a solidified gel made of <a href="https://en.wikipedia.org/wiki/Agar">Agar</a> derived from red algae. For general growth and maintenance it is most important that the yeast have sufficient nutrients, and the exact composition is generally less important, so for these tasks, so-called <em>complex</em> media is used, the standard being YPD (Yeast extract, Peptone, Dextrose) media. To make YPD Agar plates, the yeast extract, peptone, and agar are autoclaved together, then cooled to around 65C and the sterile glucose is added aseptically. The liquified agar media is then poured into dishes (Petri dishes) of the appropriate size (90 mm).</p>
</section>
<section id="dextroseglucose-solution" class="level4">
<h4 class="anchored" data-anchor-id="dextroseglucose-solution">Dextrose/Glucose Solution</h4>
<p>To start measure 100ml of <a href="https://en.wikipedia.org/wiki/Purified_water#Distillation">purified</a> water using a <a href="https://en.wikipedia.org/wiki/Graduated_cylinder">graduated cylinder</a>. Then measure 40g of glucose. If you have a hot-plate stirrer, set the hot plate to 75C and place a magnetic stir bar into a 250ml <a href="https://en.wikipedia.org/wiki/Erlenmeyer_flask">Erlenmeyer flask</a>. Slowly add the glucose to the stirred water about 5 grams at a time, allowing it to completely dissolve between additions. The glucose solution is not autoclaved, as it can lead to degradation. Therefore it is necessary to sterilize it by passing it through a filter with 0.22 micron pore size (“sterile filtering”) which is small enough to remove most bacteria and viruses.</p>
</section>
<section id="selection-plates" class="level4">
<h4 class="anchored" data-anchor-id="selection-plates">Selection plates</h4>
<p>For this work, selection plates were made from yeast nitrogen base without amino acids from <a href="https://formedium.com/product/yeast-nitrogen-base-without-amino-acids/">Formedium</a> was used. To this <a href="https://formedium.com/product/csm-single-drop-outs/">CSM single drop outs</a> for leucine, histidine, or both were added (both containing additional adenosine to 40mg/l). These are prepared in the same way as the complex media plates, with the addition of glucose or galactose done aseptically after autoclaving.</p>
</section>
</section>
<section id="yeast-strains-1" class="level3">
<h3 class="anchored" data-anchor-id="yeast-strains-1">Yeast Strains</h3>
<p>A yeast strain is a term used to indicate a yeast that has a collection of defined mutations relative to a reference strain, often called the <em>wild-type</em> strain. Sometimes strains are created to have properties that make them easier to work with, for example, a strain might carry a mutation that renders it unable to grow without an externally provided amino acid. When growing this strain, the growth can be controlled by limiting how much of this amino acid is provided. A list of commonly used yeast strains can be found on the <a href="https://sites.google.com/view/yeastgenome-help/more-about-yeast/commonly-used-strains">Saccharomyces Genome Database</a></p>
<section id="w303" class="level5">
<h5 class="anchored" data-anchor-id="w303">W303</h5>
<p>We are working with a derivative of the <a href="https://www.yeastgenome.org/strain/w303">W303</a> strain, which is itself a derivative of the <a href="https://www.yeastgenome.org/strain/S288C">S88C</a> strain. This strain has genotype MATa/MATα <em>{leu2-3,112 trp1-1 can1-100 ura3-1 ade2-1 his3-11,15} [phi+]</em></p>
</section>
</section>
<section id="transformation-1" class="level3">
<h3 class="anchored" data-anchor-id="transformation-1">Transformation</h3>
<p>Transformation refers to the uptake of external or foreign DNA into a cell. This is usually achieved by disrupting the membrane in some way, such as using chemicals (chemical transformation), large electrical fields (electoporation), or high temperatures (heat shock transformation). Transformation generally involves making Competent cells which are cells prepared in such a way that they more easily take up foreign DNA, and then introducing that foreign DNA into the cells by either chemical, heat-shock, or electroporation. For yeast, a combination of the chemical Lithium Acetate and heat-shock is often used.</p>
<section id="competent-cells" class="level4">
<h4 class="anchored" data-anchor-id="competent-cells">Competent Cells</h4>
<p>Competent cells are cells at are specially prepared to be receptive to the uptake of external DNA. For most transformation procedures, this involves starting with a healthy exponentially growing population, concentrating it, and in the case of chemical or thermal transformation, adding a chemical that aids in membrane permeabilization, such as dimethyl sulfoxide (DMSO). FInally, if the cells are to be frozen for later use, a cryoprotectant such as glycerol is added. We made competent cells following the protocol in <span class="citation" data-cites="gietzFrozenCompetentYeast2007">&nbsp;[8]</span>.</p>
</section>
<section id="lithium-acetate-transformation" class="level4">
<h4 class="anchored" data-anchor-id="lithium-acetate-transformation">Lithium Acetate Transformation</h4>
<p>The LiAc (lithium acetate) protocol <span class="citation" data-cites="itoTransformationIntactYeast1983">&nbsp;[7]</span> is a popular method for yeast transformation that is a combination of chemical and heat shock transformations. Competent yeast cells are treated with lithium acetate, which permeabilizes the cell wall. Additional single stranded DNA, often boiled salmon sperm DNA (boiling denatures the DNA making it single stranded), and polyethylene glycol (PEG) are added to facilitate DNA uptake, and a brief heat shock helps the DNA enter the cells. We used the protocols outlines in <span class="citation" data-cites="gietzHighefficiencyYeastTransformation2007">&nbsp;[9]</span>. A quicker method for easier transformations is also given in <span class="citation" data-cites="gietzQuickEasyYeast2007">&nbsp;[10]</span>,</p>
</section>
</section>
<section id="selectable-markers" class="level3">
<h3 class="anchored" data-anchor-id="selectable-markers">Selectable Markers</h3>
<p>Selectable markers are a combination of a selection pressure, and a gene allows a microbe to avoid that selective pressure. One of the most commonly used selectable markers is the combination of an antibiotic and an antibiotic resistance gene in bacteria. In this scheme, plasmids to be transformed are engineered to contain an antibiotic resistance gene, such as beta-lactamase, and then transformed bacteria are grown on plates that contain a beta-lactam antibiotic, such as ampicillin. There are many bacterial antibiotic/resistance markers, such as chloramphenicol, kanamycin, and tetracycline. Continued growth on antibiotic containing plates even after the initial transformation allows one to ensure that the plasmid is maintained in the population. Growth on non-selective media can result in plasmid loss over time. In yeast, most commonly auxotrophic markers are used. In this case, the selective pressure is a deletion of a native gene used to make a particular metabolite, often an amino acid. These cells then require that amino acid to be supplemented in the growth media. However, if the cell is transformed with the gene or an enzyme that rescues its ability to make this metabolite, it can then be grown in media without that supplemental metabolite. In this way, continued growth in a media without the metabolite ensures that the plasmid is maintained.</p>



</section>
</section>
</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body" data-entry-spacing="0">
<div id="ref-Stolovicki2006-sd" class="csl-entry">
<div class="csl-left-margin">[1] </div><div class="csl-right-inline">E. Stolovicki, T. Dror, N. Brenner, and E. Braun, <em>Synthetic Gene Recruitment Reveals Adaptive Reprogramming of Gene Regulation in Yeast</em>, Genetics <strong>173</strong>, 75 (2006).</div>
</div>
<div id="ref-woronoffMetabolicCostRapid2020" class="csl-entry">
<div class="csl-left-margin">[2] </div><div class="csl-right-inline">G. Woronoff, P. Nghe, J. Baudry, L. Boitard, E. Braun, A. D. Griffiths, and J. Bibette, <em><a href="https://doi.org/10.1073/pnas.1913767117">Metabolic Cost of Rapid Adaptation of Single Yeast Cells</a></em>, Proc. Natl. Acad. Sci. U.S.A. <strong>117</strong>, 10660 (2020).</div>
</div>
<div id="ref-cormackYeastenhancedGreenFluorescent1997" class="csl-entry">
<div class="csl-left-margin">[3] </div><div class="csl-right-inline">B. P. Cormack, G. Bertram, M. Egerton, N. A. R. Gow, S. Falkow, and A. J. P. Brown, <em><a href="https://doi.org/10.1099/00221287-143-2-303">Yeast-Enhanced Green Fluorescent Protein (<span class="nocase">yEGFP</span>): A Reporter of Gene Expression in <span>Candida</span> Albicans</a></em>, Microbiology <strong>143</strong>, 303 (1997).</div>
</div>
<div id="ref-cormackFACSoptimizedMutantsGreen1996" class="csl-entry">
<div class="csl-left-margin">[4] </div><div class="csl-right-inline">B. P. Cormack, R. H. Valdivia, and S. Falkow, <em><a href="https://doi.org/10.1016/0378-1119(95)00685-0"><span class="nocase">FACS-optimized</span> Mutants of the Green Fluorescent Protein (<span>GFP</span>)</a></em>, Gene <strong>173</strong>, 33 (1996).</div>
</div>
<div id="ref-kaishimaExpressionVariedGFPs2016" class="csl-entry">
<div class="csl-left-margin">[5] </div><div class="csl-right-inline">M. Kaishima, J. Ishii, T. Matsuno, N. Fukuda, and A. Kondo, <em><a href="https://doi.org/10.1038/srep35932">Expression of Varied <span>GFPs</span> in <span>Saccharomyces</span> Cerevisiae: Codon Optimization Yields Stronger Than Expected Expression and Fluorescence Intensity</a></em>, Sci Rep <strong>6</strong>, 35932 (2016).</div>
</div>
<div id="ref-bennettMetabolicGeneRegulation2008" class="csl-entry">
<div class="csl-left-margin">[6] </div><div class="csl-right-inline">M. R. Bennett, W. L. Pang, N. A. Ostroff, B. L. Baumgartner, S. Nayak, L. S. Tsimring, and J. Hasty, <em><a href="https://doi.org/10.1038/nature07211">Metabolic Gene Regulation in a Dynamically Changing Environment</a></em>, Nature <strong>454</strong>, 1119 (2008).</div>
</div>
<div id="ref-itoTransformationIntactYeast1983" class="csl-entry">
<div class="csl-left-margin">[7] </div><div class="csl-right-inline">H. Ito, Y. Fukuda, K. Murata, and A. Kimura, <em><a href="https://doi.org/10.1128/jb.153.1.163-168.1983">Transformation of Intact Yeast Cells Treated with Alkali Cations</a></em>, J Bacteriol <strong>153</strong>, 163 (1983).</div>
</div>
<div id="ref-gietzFrozenCompetentYeast2007" class="csl-entry">
<div class="csl-left-margin">[8] </div><div class="csl-right-inline">R. D. Gietz and R. H. Schiestl, <em><a href="https://doi.org/10.1038/nprot.2007.17">Frozen Competent Yeast Cells That Can Be Transformed with High Efficiency Using the <span>LiAc</span>/<span>SS</span> Carrier <span>DNA</span>/<span>PEG</span> Method</a></em>, Nat Protoc <strong>2</strong>, 1 (2007).</div>
</div>
<div id="ref-gietzHighefficiencyYeastTransformation2007" class="csl-entry">
<div class="csl-left-margin">[9] </div><div class="csl-right-inline">R. D. Gietz and R. H. Schiestl, <em><a href="https://doi.org/10.1038/nprot.2007.13">High-Efficiency Yeast Transformation Using the <span>LiAc</span>/<span>SS</span> Carrier <span>DNA</span>/<span>PEG</span> Method</a></em>, Nat Protoc <strong>2</strong>, 31 (2007).</div>
</div>
<div id="ref-gietzQuickEasyYeast2007" class="csl-entry">
<div class="csl-left-margin">[10] </div><div class="csl-right-inline">R. D. Gietz and R. H. Schiestl, <em><a href="https://doi.org/10.1038/nprot.2007.14">Quick and Easy Yeast Transformation Using the <span>LiAc</span>/<span>SS</span> Carrier <span>DNA</span>/<span>PEG</span> Method</a></em>, Nat Protoc <strong>2</strong>, 35 (2007).</div>
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>enzymes that recognize and cut a specific DNA sequence↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Builds</category>
  <category>Notes</category>
  <category>Yeast</category>
  <guid>https://notes.livingphysics.org/build_posts/gal-his_yeast_build/</guid>
  <pubDate>Fri, 28 Feb 2025 00:00:00 GMT</pubDate>
  <media:content url="https://notes.livingphysics.org/build_posts/gal-his_yeast_build/images/Project_Image002_ch00.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>First Generation Bioreactor Update</title>
  <dc:creator>David Jordan</dc:creator>
  <dc:creator>Somsubhro Bagchi</dc:creator>
  <link>https://notes.livingphysics.org/build_posts/gen1_reactor_update_01/</link>
  <description><![CDATA[ 





<section id="overview" class="level1">
<h1>Overview</h1>
<p>This note describes an upgrade to the first generation bioreactor to increase the sensitivity and long-term reliability of the optical density measurements. The optical density measurements are done using a combination of infrared photodiodes and infrared LEDs.</p>
</section>
<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>This note will describe the build process in a series of steps which describe the design and construction of the following:</p>
<ol type="1">
<li>Modified 3D printed LED and photodiode guide based on the Pioreactor open source design.</li>
<li>New Transimpedance Amplifier (OP380) based photodiode current amplifier.</li>
</ol>
<section id="d-printed-led-and-photodiode-sleeve" class="level2">
<h2 class="anchored" data-anchor-id="d-printed-led-and-photodiode-sleeve">3D Printed LED and Photodiode Sleeve</h2>
<p>One of the major issues with the initial design is that black acrylic sheet is transparent to infrared. As such, each sheet transmitted and internally reflected much of the output of the infrared LED, leading to different baseline readings for the interior vs exterior reactors in a 4 reactor line. In addition, the previous design allowed some rotation of the diodes and LED which resulted in inconsistencies. The 3D printed <a href="https://www.printables.com/model/715199-pioreactor-20ml-v10-printable-parts">Pioreactor v1.0 vial holder</a> solves this problem but was too high for our system, so I trimmed it in Autodesk Fusion to retain a truncated version <a href="./files/trunc_vial_holder.stl">(.stl file)</a>. First, load the model and then click on the <em>Mesh</em> tab. Create an <em>Offset Plane</em> and position it were you want to cut the model (I cut i just above and just below the diode l ayer). Finally, use the <em>Plane Cut</em> command in the modify section and choose the <strong>fill</strong> option.</p>
</section>
<section id="transimpedance-amplifier-circuit" class="level2">
<h2 class="anchored" data-anchor-id="transimpedance-amplifier-circuit">Transimpedance Amplifier Circuit</h2>
<p>I have designed and implemented a new current amplifier based on the OP380 Transimpedance amplifier to amplify the photodiode current used to measure the cultures optical density. We have chosen different gains for each set of photodiodes. The highest gain is achieved with <img src="https://latex.codecogs.com/png.latex?100M%5COmega"> resistors for the IR reference PDs, the <img src="https://latex.codecogs.com/png.latex?135%5E%7B%5Ccirc%7D"> PDs use a <img src="https://latex.codecogs.com/png.latex?10M%5COmega"> resistor and the <img src="https://latex.codecogs.com/png.latex?180%5E%7B%5Ccirc%7D"> PDs use a <img src="https://latex.codecogs.com/png.latex?360k%5COmega"> resistor. The circuit for the transimpedance amplifier is based on the simple amplifier circuit provided in the <a href="https://www.ti.com/lit/ds/symlink/opa380.pdf">OP380 documentation</a>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://notes.livingphysics.org/build_posts/gen1_reactor_update_01/images/opa380_amplifier.png" class="img-fluid figure-img"></p>
<figcaption>Transimpedance Amplifier Circuit Diagram. The values for <img src="https://latex.codecogs.com/png.latex?R_f"> for the 180, 135 and Reference PD amplifiers are <img src="https://latex.codecogs.com/png.latex?100M%5COmega">, <img src="https://latex.codecogs.com/png.latex?10M%5COmega">, and <img src="https://latex.codecogs.com/png.latex?360K%5COmega"> respectively.</figcaption>
</figure>
</div>


</section>
</section>

 ]]></description>
  <category>Builds</category>
  <category>Bioreactor</category>
  <guid>https://notes.livingphysics.org/build_posts/gen1_reactor_update_01/</guid>
  <pubDate>Tue, 18 Feb 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>How I Built This Quarto Notes Site</title>
  <dc:creator>David Jordan</dc:creator>
  <link>https://notes.livingphysics.org/build_posts/quarto_blog_build/</link>
  <description><![CDATA[ 





<p>This note describes how I set up and hosted this quarto notes site on the notes.x subdomain of my domain <a href="https://www.livingphysics.org">livingphysics.org</a>. To do this I run quarto locally in <a href="https://code.visualstudio.com">Visual Studio Code</a> and serve the site using a <a href="https://www.digitalocean.com">DigitalOcean</a> app with a custom domain that is managed by SquareSpace. As of this writing (September ’24) Digital Ocean allows you to create 3 free apps.</p>
<p><a href="https://www.quarto.org">Quarto</a> is a</p>
<blockquote class="blockquote">
<p>An open-source scientific and technical publishing system</p>
</blockquote>
<p>based on markdown that allows for equations and code to be easily embedded into posts. This <a href="https://quarto.org/docs/guide/">guide</a> provides an excellent overview of setting up a quarto notes site and how to author individual posts as well as the basics of markdown. I referred to this to set up the website, the different notes sections, the main index, and the RSS feed. This site is separately hosted from the my main website, which I wrote mostly in html and is hosted on github pages with a custom domain.</p>
<section id="overview" class="level1">
<h1>Overview</h1>
<p>I like quarto because you can embed both math equations and code directly into posts, and turn this into a static website very quickly, reducing the time between writing and publishing. I also enjoy <a href="https://obsidian.md">Obsidian</a> a lot for personal notes, but found myself having to generate figures separately which slowed the online publishing process. I also began using Julia extensively so this eased the transition as I could generate figures this way instead of in Matlab.</p>
<section id="guide" class="level2">
<h2 class="anchored" data-anchor-id="guide">Guide</h2>
<section id="setting-up-my-local-environment" class="level3">
<h3 class="anchored" data-anchor-id="setting-up-my-local-environment">Setting up my local environment</h3>
<ol type="1">
<li><p>First I installed <a href="https://code.visualstudio.com">Visual Studio Code</a> and added the <a href="https://marketplace.visualstudio.com/items?itemName=quarto.quarto">Quarto</a>, <a href="https://marketplace.visualstudio.com/items?itemName=julialang.language-julia">Julia</a>, <a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker">Code Spell Checker</a>, and the <a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker-scientific-terms">Scientific Terms</a> extensions via the extensions sidebar in the left panel. The code spell checker extension allows for mistake highlighting in VS code, and the shortcut for making a correction is to click on the underlined word and press Command + Period(.) on my Mac.</p></li>
<li><p>I render the website locally using the <code>quarto render</code> command and the files are built into the <code>docs</code> subdirectory as the following code is in the <code>_quarto.yml</code> file in the <code>quarto_notes</code> directory.</p></li>
</ol>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">project</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> website</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">output-dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> docs</span></span></code></pre></div>
<ol start="3" type="1">
<li>The <code>quarto_notes</code> directory is a git repository that is synced to a public github repository. I created this using the github desktop client. This is convenient because after rendering, it is simple to <code>git commit</code> and <code>git push</code> the changes to your public repository. Downstream, the app will be configured to rebuild you site after a new commit is pushed. The repository can be found <a href="https://github.com/davex0r/quarto_notes">here</a>. This has a few benefits:</li>
</ol>
<ul>
<li>as it is a public repository, others can view the source code for the site directly which can help them replicate parts of the site</li>
<li>there is robust version control and version history, which allows changes to posts to be tracked over time. This provides a record of revisions</li>
<li>comments and issues (both technological and scientific) can be opened using the <a href="https://github.com/davex0r/quarto_notes/issues">GitHub issues</a> feature.</li>
</ul>
<p>Eventually, I would like to integrate a commenting system as well, but as this site is currently served as a static site, it likely requires an upgrade to a paid Digital Ocean app.</p>
</section>
<section id="setting-up-the-remote-environment." class="level3">
<h3 class="anchored" data-anchor-id="setting-up-the-remote-environment.">Setting up the remote environment.</h3>
<p>I referred to <a href="https://www.digitalocean.com/community/tutorials/how-to-deploy-a-static-website-to-the-cloud-with-digitalocean-app-platform">this guide</a> provided by Digital Ocean no how to set up a static site app. The only difference is that you will need to specify the source directory as <code>docs</code>. Make sure auto deploy is on. You can find this in settings by clicking on the component called <em>your_repository-docs</em> and can change it in the sections called Source. The guide was simple and worked flawlessly so I will only describe below how I got my app to point to my custom subdomain. Digital ocean also provides a very good <a href="https://docs.digitalocean.com/products/app-platform/how-to/manage-domains/">guide</a> for this.</p>
<ol type="1">
<li><p>You will need to purchase or otherwise obtain a domain name. My domains are managed by SquareSpace domains, and were inherited here from Google domains. If you are choosing a domain provider and want to use the Obsidian publish feature with your domain as well, I suggest using <a href="https://help.obsidian.md/Obsidian+Publish/Set+up+a+custom+domain">Cloudfare</a>.</p></li>
<li><p>On the Digital Ocean app dashboard for your site, in the top left there is a button that says Actions. If you click this one action is manage domains. You can also get here by clicking the setting tab and scrolling down to Domains. Here you will find the IP address for your app, mine looks like <em>app_ip_address.ondigitalocean.app</em>. You will need this for the CNAME record in the next step. Here you will also see a button called Add Domain. Click it and add the subdomain you want to point to your app. Mine is <em>notes.livingphysics.org</em>.</p></li>
<li><p>On the SquareSpace domain management site, there is a sidebar option called DNS and a sub option called DNS Settings. Here you can add custom records. I added a CNAME record as shown below. Digital Ocean provides a guide for this in general <a href="https://docs.digitalocean.com/products/networking/dns/how-to/manage-records/">here</a>.</p></li>
</ol>
<pre><code>Host    Type    Priority    Data
notes   CNAME   ---         app_ip_address.ondigitalocean.app</code></pre>
<p>That should be everything you need to get up and running with your site. As always with these things, there is probably a ton of latent knowledge I have neglected to share, so don’t hesitate to reach out with questions. I will also periodically provide updates to this post to address points that are unclear or poorly explained.</p>


</section>
</section>
</section>

 ]]></description>
  <category>Builds</category>
  <category>Notes</category>
  <guid>https://notes.livingphysics.org/build_posts/quarto_blog_build/</guid>
  <pubDate>Wed, 18 Sep 2024 23:00:00 GMT</pubDate>
</item>
<item>
  <title>First Generation Bioreactor Build Note</title>
  <dc:creator>David Jordan</dc:creator>
  <dc:creator>Michele Cespa</dc:creator>
  <link>https://notes.livingphysics.org/build_posts/gen1_reactor_build/</link>
  <description><![CDATA[ 





<section id="overview" class="level1">
<h1>Overview</h1>
<p>This note describes the design and construction of a RaspberryPi based 4-bioreactor system that has external illumination, external temperature recording, and magnetic stirring. The system monitors internal temperature and pressure using the BME280 series sensor and monitors turbidity via Infrared absorbance (<img src="https://latex.codecogs.com/png.latex?180%5E%7B%5Ccirc%7D"> ) and scattering (<img src="https://latex.codecogs.com/png.latex?135%5E%7B%5Ccirc%7D">). This system is based on the sealed long-term ecosystems designed by the Kuehn Lab<span class="citation" data-cites="De_Jesus_Astacio2021-ld">&nbsp;[1]</span>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://notes.livingphysics.org/build_posts/gen1_reactor_build/images/bioreactor.png" class="img-fluid figure-img"></p>
<figcaption>First Generation Bioreactor (x4)</figcaption>
</figure>
</div>
</section>
<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>This note will describe the build process in a series of steps which describe the design and construction of the following:</p>
<ol type="1">
<li>Variable speed, pulse wave modulated (PWM) magnetic stirring</li>
<li>Programmable Illumination using NeoPixel 8 LED rings</li>
<li>Turbidity measurements with reference using infrared LED’s and photodiodes.</li>
<li>Vial surface temperature using DS18B20 Temperature Sensors</li>
<li>External Temperature using PCT2075 Temperature Sensor.</li>
<li>Internal Temperature, Pressure and Humidity using BME280 sensors</li>
<li>Construction, and Assembly of Final Device</li>
</ol>
<p>Instructions for setting up your Raspberry Pi with the required libraries and the code to run this series of reactors can be found on Michele Cespa’s <a href="https://github.com/m-cespa/RPi-Biosensor">Github</a>. This also includes a <a href="https://github.com/m-cespa/RPi-Biosensor/blob/main/docs/schematic_labelled.png">diagram</a> of the wiring for all for the sensors. (Note this is run on Pi 3B+s, and there is a known issue with Pi5s not supporting the RPi.GPIO library). We have attempted to include all relevant information for recreating this build as inline links. Some of the products listed are from UK based suppliers, if you have trouble sourcing any of them where you are, reach out and I may be able to provide some advice on alternatives.</p>
</section>
<section id="design-and-construction" class="level1">
<h1>Design and Construction</h1>
<section id="stirring" class="level2">
<h2 class="anchored" data-anchor-id="stirring">Magnetic Stirring</h2>
<p>Magnetic stirring is done using PWM controlled PC fans as with magnetics attached. For this version, I have used Noctua NF-A6x25 <a href="https://www.amazon.co.uk/gp/product/B00VXTANZ4/">Fans</a>, which are 12V and 60mm square. The have anti-vibration pads and can be mounted directly to the 15mm <a href="https://www.makerbeam.com/openbeam/openbeam-15x15mm-profile-lengths-anodised-in-black/">construction rail</a> we have used as a frame. The frame consists of 2x 270mm and 4x150mm beams (more details in Construction and Assembly). A pair of <a href="https://www.amazon.co.uk/gp/product/B007UOXS1M/">magnets</a> is attached to the free face of each fan (the underside) with one “face up” next to one “face down” using 3M double stick <a href="https://www.amazon.co.uk/gp/product/B09XFDRHXW">foam tape</a>. The fans include a Y-adapter which can be used to make a tree so that all fans can be powered and controlled with a single connector. The magnets spin a 10mm <a href="https://www.amazon.co.uk/gp/product/B0C237M15K">stir bar</a> placed inside each vial.</p>
</section>
<section id="illumination" class="level2">
<h2 class="anchored" data-anchor-id="illumination">Programmable Illumination</h2>
<p>Illumination is provided from below using a Neopixel 8 LED <a href="https://coolcomponents.co.uk/products/8-led-32mm-ring-ws2812b-5050-rgb-led-with-integrated-drivers-adafruit-neopixel-compatible">ring</a>, mounted above the fan. This allows for arbitrary RGB coloring. The NeoPixel library allows the specification of color in 3-element RGB format. The rings are connected in series, but fully addressable individually. Sample code for programming the rings is provided in the git repository in the <a href="https://github.com/m-cespa/RPi-Biosensor/blob/main/build/neo_pixel.py">build</a> directory. A custom base which allows for the cables to be daisy chained as well as a holding plate for each ring were laser cut. The assembly is outlined below.</p>
</section>
<section id="turbidity" class="level2">
<h2 class="anchored" data-anchor-id="turbidity">Turbidity Measurement Layer</h2>
<p>Turbidity is measured using simple <a href="https://uk.rs-online.com/web/p/photodiodes/6548895">photodiode</a> circuits to convert photons into a voltage that is read by one of the two analog to digital converters (ADCs) and read over the i2c protocol on the Raspberry Pi. We have employed a <a href="https://thepihut.com/products/adafruit-ads1115-16-bit-adc-4-channel-with-programmable-gain-amplifier">4-channel 16 bit ADC</a> and an <a href="https://thepihut.com/products/adafruit-ads7830-8-channel-8-bit-adc-with-i2c-stemma-qt-qwiic">8-channel 8 bit ADC</a> to record the 12 photodiode signals. 4 pass-thru absorbance signals at (<img src="https://latex.codecogs.com/png.latex?180%5E%7B%5Ccirc%7D"> ) and 4 scattering signals at (<img src="https://latex.codecogs.com/png.latex?135%5E%7B%5Ccirc%7D">) and 4 <a href="https://uk.rs-online.com/web/p/ir-leds/2108076">IR LED</a> output reference signals. This design was adapted from a similar design in the commerically available <a href="https://pioreactor.com/">PioReactor</a>. We have 4 of these that will be used for another part of the project. Each of the LEDs and photodiodes is held in the correct orientation and location by placing it in an appropriately shaped laser cut-out. The LEDs were provided a constant current that could be switched on and off using a <a href="https://thepihut.com/products/femtobuck-led-driver">FemtoBuck</a>.</p>
</section>
<section id="surface_temp" class="level2">
<h2 class="anchored" data-anchor-id="surface_temp">Vial Surface Temperature Layer</h2>
<p>Above the Turbidity sensor layer, there are 4 <a href="https://thepihut.com/products/ds18b20-one-wire-digital-temperature-sensor">DS18B20</a> one-wire temperature probes that monitor the temperature at the outside surface of the vial. Using the 1-wire protocol allows fro all of these to be wired together in parallel, which is greatly simplified by using these daisy chain <a href="https://www.mouser.co.uk/ProductDetail/SchmartBoard/920-0194-50?qs=wd5RIQLrsJiI3jb%252BR3OjdQ%3D%3D">wires</a><sup>1</sup> from Mouser.</p>
</section>
<section id="pressure" class="level2">
<h2 class="anchored" data-anchor-id="pressure">Internal Pressure and Temperature Sensors</h2>
<p>The internal pressure sensors are mounted in the lids of the vials in a manner similar to the one described in <span class="citation" data-cites="De_Jesus_Astacio2021-ld">&nbsp;[1]</span>. First, 4 holes were laser cut into each lid to allow a 4-pin male-male header to pass through snugly. This was then sealed with hermetic sealing epoxy (<a href="https://www.epotek.com/docs/en/Datasheet/H74.pdf">Epo-tek H74</a>). These reactors are designed for experiments much shorter than those described in <span class="citation" data-cites="De_Jesus_Astacio2021-ld">&nbsp;[1]</span>, so less expensive epoxy could probably be used. Each <a href="https://www.amazon.co.uk/AZDelivery-Barometric-Temperature-Humidity-Raspberry/dp/B07HMQMW6M/">BME280</a> sensor board was soldered with a 4-pin female header. On the outside, the same daisy chain wires were used to provide power to each sensor board in parallel, and an individual wires were attached to the pins for each SDA and SCL pin and connected to a <a href="">4-channel multiplexer</a>.</p>
</section>
<section id="external_temp" class="level2">
<h2 class="anchored" data-anchor-id="external_temp">External Temperature</h2>
<p>Finally an external temperature sensor (<a href="https://thepihut.com/products/adafruit-pct2075-temperature-sensor-stemma-qt-qwiic-ada4369">PCT2075</a>) was added in series with all fo the other i2c components to monitor the fluctuations in temperature in the room, due mostly to changes in the building-wide heating and cooling system. As this design does not incorporate onboard temperature control, the entire rector can be either placed in an incubator or in a temperature controlled room if desired. The next generation reactor will incorporate onboard temperature control.</p>
</section>
<section id="assembly" class="level2">
<h2 class="anchored" data-anchor-id="assembly">Construction and Assembly</h2>
<section id="general-notes-on-electronics" class="level3">
<h3 class="anchored" data-anchor-id="general-notes-on-electronics">General Notes on Electronics</h3>
<p>All of the sensor boards are powered by a single power supply and a combination of <a href="https://www.mouser.co.uk/ProductDetail/Texas-Instruments/LM7805CT-NOPB?qs=OYMYEaN9QmBS2GvaX6GSkQ%3D%3D">LM7805</a> and <a href="https://www.mouser.co.uk/ProductDetail/Texas-Instruments/LM7812CT-NOPB?qs=OYMYEaN9QmBofCpFKHiRuQ%3D%3D">LM7812</a> +5V and +12V voltage regulators. The i2c sensor boards have QWIIC connectors which pass through the power and the SDA/SCL signals. Because these have unique i2c addresses they can all be read independently (the four BMEs have the same i2c addresses and require the multiplexer, in general the same devices have the same address, but this can be altered to some extent with address jumper pins. Multiplexing was more convenient in this case). A variety of QWIIC connectors can be found <a href="https://thepihut.com/products/sparkfun-qwiic-cable-kit">here</a></p>
</section>
<section id="physical-construction" class="level3">
<h3 class="anchored" data-anchor-id="physical-construction">Physical Construction</h3>
<p>The final construction is diagramed below. The vials are held in a layered structure built up from custom cut pieces of 5mm acrylic sheet. The diagrams for the different layers are in the <a href="https://github.com/m-cespa/RPi-Biosensor/tree/main/build/cad_files">cad_files</a> directory of the project git.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://notes.livingphysics.org/build_posts/gen1_reactor_build/images/construction_diagram.png" class="img-fluid figure-img"></p>
<figcaption>Construction Diagram: In this diagram, the light grey rectangles represent 2mm clear acrylic and the black rectangles are 5mm black acrylic. Red and Blue holes are holes for M3 screws to pass through The double hole plates have holes large enough to accommodate the screw heads.</figcaption>
</figure>
</div>
<p>The basic build connects two H-frames made from a 270mm construction rail with the fans themselves. The 4 fans comprise 240mm leaving 10mm between the fans. The vials themselves are spaced 70mm center to center. The idea is that each sensor layer is comprised of three acrylic sheet layers, a bottom and otp layer, and then a middle layer which has the cutouts for the individual components as shown in the .dxf files. Attachments to the construction rails are done with M3 screws and hex nuts. 3mm M3 screws for constructing the H-frame and 6mm screws for attaching the fans to the rails. These can be drop in T-nuts but if you are using hex nuts the fans will have to be slid into place one at a time.</p>
</section>
</section>
</section>
<section id="conclusions-and-future-notes" class="level1">
<h1>Conclusions and Future Notes</h1>
<p>In the future, a more detailed guide to the construction will be uploaded, along with photos and step-by-step instructions. In the meantime, if you have need any assistance in construction please feel free to e-mail me or to open an issue in the git repository.</p>
</section>
<section id="addendum-waterproofing" class="level1">
<h1>Addendum: Waterproofing</h1>
<p>I had a brief sensor failure ona BME sensor which I believe to have been caused by condensation forming on the sensor. In previous runs, the humidity has risen from <img src="https://latex.codecogs.com/png.latex?50%5C%25"> to about <img src="https://latex.codecogs.com/png.latex?95%5C%25"> over the course of the 48 hour experiment, but on this day, the humidity started at around <img src="https://latex.codecogs.com/png.latex?100%5C%25"> due to the foam plug between the sample and sensors being a bit damp. First I will ensure this is not the case in the future, but it did highlight that for increased robustness it makes sense to protect the electronics around the BME280 sensors. I referred to <a href="https://thecavepearlproject.org/2023/03/17/waterproofing-your-electronics-project/">The Cave Pearl Project</a> site a lot when deciding how to go about sealing the electronics. In this case, I have pre-coated the board with 2 layers of clear coat nail polish, and then covered the metal pins where I soldered the header in with <a href="https://www.amazon.co.uk/Araldite-Standard-Strong-Adhesive-Materials/dp/B0CNV3BQ17">Ardalite</a> epoxy. I then covered this again with <a href="https://www.amazon.co.uk/JB-8237-Weld-Fast-Setting-Reinforced/dp/B003S2E4UE">PlasticWeld</a> and used some more to affix an <a href="https://uk.rs-online.com/web/p/sensor-accessories/8854704">SHT2x</a> Sealing cap over the BME sensor.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://notes.livingphysics.org/build_posts/gen1_reactor_build/images/sealed_bme.png" class="img-fluid figure-img"></p>
<figcaption>Sealed BME280 Sensor with SHT2 Cap</figcaption>
</figure>
</div>



</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body" data-entry-spacing="0">
<div id="ref-De_Jesus_Astacio2021-ld" class="csl-entry">
<div class="csl-left-margin">[1] </div><div class="csl-right-inline">L. M. de Jesús Astacio, K. H. Prabhakara, Z. Li, H. Mickalide, and S. Kuehn, <em>Closed Microbial Communities Self-Organize to Persistently Cycle Carbon</em>, Proceedings of the National Academy of Sciences <strong>118</strong>, e2013564118 (2021).</div>
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>(194:Red, 195:Black)↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Builds</category>
  <category>Bioreactor</category>
  <guid>https://notes.livingphysics.org/build_posts/gen1_reactor_build/</guid>
  <pubDate>Tue, 17 Sep 2024 23:00:00 GMT</pubDate>
  <media:content url="https://notes.livingphysics.org/build_posts/gen1_reactor_build/images/bioreactor.png" medium="image" type="image/png" height="108" width="144"/>
</item>
</channel>
</rss>
