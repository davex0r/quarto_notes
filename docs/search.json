[
  {
    "objectID": "builds.html",
    "href": "builds.html",
    "title": "Build Notes",
    "section": "",
    "text": "Welcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nAug 11, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "builds_posts/welcome/index.html",
    "href": "builds_posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "tech_posts/TAI/TAI.html",
    "href": "tech_posts/TAI/TAI.html",
    "title": "TAI Note",
    "section": "",
    "text": "Let’s begin with the definition of the \\(TAI\\) at stage \\(s\\): \\[TAI(s) = \\sum_i^N p_i \\frac{e_i(s)}{\\sum_i^Ne_i(s)}\\] where, \\(e_i(s)\\) is the expression of gene \\(i\\) in stage \\(s\\) and \\(p_i\\) is the measure of gene age (phylostratum) of gene \\(i\\) and where there are \\(N\\) genes total.\nIf we define the normalized expression \\[n_i(s) = \\frac{e_i(s)}{\\sum_i^Ne_i(s)}\\] This can be rewritten as \\[TAI(s) =  \\langle p_i,n_i(s)\\rangle\\]where \\(\\langle\\cdot,\\cdot\\rangle\\) is the inner (dot) product. Thus, we are taking the dot product of 2 vectors, the phylostratum vector and the normalized expression vector. By construction, the normalized expression vector satisfies the property \\(\\sum_i^N n_i(s)=1\\). The space of possible normalized expression vectors is then the N-simplex.\n\n\nCode\nusing Plots\n\nvertices = [\n    [1.0, 0.0, 0.0],  # Unit vector in x direction\n    [0.0, 1.0, 0.0],  # Unit vector in y direction\n]\n\n# Create the plot\np = plot(\n    xlabel=\"X\", ylabel=\"Y\",\n    title=\"Standard 1-Simplex\",\n    legend=false,\n    aspect_ratio=:equal,\n)\n\n# Plot all edges of the tetrahedron\nfor i in 1:2\n    for j in (i+1):2\n        v1, v2 = vertices[i], vertices[j]\n        plot!(p, [v1[1], v2[1]], [v1[2], v2[2]], \n              color=:blue, linewidth=2)\n    end\nend\n\n# Plot vertices as points\nscatter!(p, [v[1] for v in vertices], [v[2] for v in vertices], \n         color=:blue, markersize=5)\n\n# Set the axis limits\nplot!(p, xlim=(-0.1, 2.5), ylim=(-0.1, 2.5))\n\n# Display the plot\nvector = [1, 2]\nquiver!(p, [0], [0], quiver=([vector[1]], [vector[2]]), \n        color=:purple, linewidth=2, arrow=arrow(:closed, 0.1))\n\nexp_vec = [\n    [1, 0],\n    [0, 1],\n    [0.5, 0.5]\n]\n\nfor v in exp_vec\n    quiver!(p, [0], [0], quiver=([v[1]], [v[2]]), color=:red, linewidth=2, arrow=arrow(:closed, 0.1))\nend\n\ndisplay(p)\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: 2-Gene Simplex Plot\n\n\n\n\nThis diagram depicts an example with 2 genes, in this case the possible normalized expression vectors are shown as the blue simplex, with 3 example expressions shown as the red vectors. A hypothetical phylostratum vector with gene age 1 for gene X and age 2 for gene Y is shown in purple, but this analysis does not depend on the particular form of \\(p_i\\). What happens when we calculate the TAI for different possible normalized expression vectors along the simplex (blue)? In general, the dot product can be calculated as \\[\\langle p_i,n_i(s) \\rangle = \\left\\lVert p_i\\right\\rVert \\left\\lVert n_i(s)\\right\\rVert cos(\\theta)\\]\nWhen comparing the TAI between different stages, the phylostratum vector is fixed, so \\(\\left\\lVert p_i\\right\\rVert\\) is constant. As expression patterns change between stages however, we would like to see how these changes affect the projection of \\(n_i(s)\\) onto \\(p_i\\). This projection has 2 components, \\(\\left\\lVert n_i(s)\\right\\rVert\\) and \\(cos(\\theta)\\). However, the magnitude of \\(n_i(s)\\) is not constant, in fact near the vertices, the magnitude is larger than near the center of the simplex (equal expression of all genes). This implies that in this formulation, stages which have fewer genes expressed or a small number of more highly expressed genes (and thus normalized expression vectors nearer to the vertices) will have a necessarily larger TAIs regardless of which genes are expressed. This is not a feature we would like to have in the TAI, and in fact this feature gets much worse the more genes we have. In the 2 gene example, the magnitude of \\(n_i\\) at the center is \\(0.7071\\) times the magnitudes at the vertices. As the number of genes goes up, this factor decreases even more.\n\n\nCode\nusing LinearAlgebra  # For the norm() function\nusing Plots  # For plotting\n\n# Initialize an array to store the norms\nl = zeros(999)\n\n# Main loop\nfor i in 2:1000\n    x = ones(i)  # In Julia, this creates a vector, not a matrix\n    x = x / sum(x)\n    l[i-1] = norm(x)\nend\n\n# Plot the results\nplot(l, xlabel=\"Number of Genes\", ylabel=\"Magnitude of Center\", title=\"Norm of Centered Expression Vector\")\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 2: Magnitude of the center vector\n\n\n\n\nThe simple solution is to transform the expression vectors so that they all have unit length. This is easy enough to do, but because these values fall on a simplex, taking the square root of the normalized expression vector is a convenient way to carry out this transformation. This works because \\(\\sum_i^N n_i(s)=1\\), thus if we take the square root at this stage, and let \\(r_i(s)= \\sqrt{n_i(s)}\\).\n\\[\\sum_i^N r_i(s)^2=1\\] and thus the \\[\\left\\lVert r(s)\\right\\rVert = \\sqrt{\\sum_i^N r_i(s)^2} = 1\\]\nNow the set of possible transformed expression vectors is the unit N-sphere rather than the simplex.\n\n\nCode\nusing Plots\n\nvertices = [\n    [1.0, 0.0, 0.0],  # Unit vector in x direction\n    [0.0, 1.0, 0.0],  # Unit vector in y direction\n]\n\n# Create the plot\np = plot(\n    xlabel=\"X\", ylabel=\"Y\",\n    title=\"Standard 1-Sphere\",\n    legend=false,\n    aspect_ratio=:equal,\n)\n\n# Plot n-sphere\nfunction quarter_circle(t)\n    x = cos.(t)\n    y = sin.(t)\n    return x, y\nend\n\n# Generate points\nt = range(0, π/2, length=100)\nx, y = quarter_circle(t)\n\n# Create the plot\nplot!(x, y, \n    aspect_ratio=:equal, \n    label=\"Quarter Circle\",\n    linewidth=2,\n    color=:blue\n)\n\n# Plot vertices as points\nscatter!(p, [v[1] for v in vertices], [v[2] for v in vertices], \n         color=:blue, markersize=5)\n\n# Set the axis limits\nplot!(p, xlim=(-0.1, 2.5), ylim=(-0.1, 2.5))\n\n# Display the plot\nvector = [1, 2]\nquiver!(p, [0], [0], quiver=([vector[1]], [vector[2]]), \n        color=:purple, linewidth=2, arrow=arrow(:closed, 0.1))\n\nexp_vec = [\n    [1, 0],\n    [0, 1],\n    [0.7071, 0.7071]\n]\n\nfor v in exp_vec\n    quiver!(p, [0], [0], quiver=([v[1]], [v[2]]), color=:red, linewidth=2, arrow=arrow(:closed, 0.1))\nend\n\ndisplay(p)\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: 2-Gene Sphere Plot\n\n\n\n\nThe issue of the form of \\(p_i\\), for example whether it should be a quantile rank, is separate from this issue."
  },
  {
    "objectID": "tech_posts/TAI/TAI.html#the-square-root-transform",
    "href": "tech_posts/TAI/TAI.html#the-square-root-transform",
    "title": "TAI Note",
    "section": "",
    "text": "Let’s begin with the definition of the \\(TAI\\) at stage \\(s\\): \\[TAI(s) = \\sum_i^N p_i \\frac{e_i(s)}{\\sum_i^Ne_i(s)}\\] where, \\(e_i(s)\\) is the expression of gene \\(i\\) in stage \\(s\\) and \\(p_i\\) is the measure of gene age (phylostratum) of gene \\(i\\) and where there are \\(N\\) genes total.\nIf we define the normalized expression \\[n_i(s) = \\frac{e_i(s)}{\\sum_i^Ne_i(s)}\\] This can be rewritten as \\[TAI(s) =  \\langle p_i,n_i(s)\\rangle\\]where \\(\\langle\\cdot,\\cdot\\rangle\\) is the inner (dot) product. Thus, we are taking the dot product of 2 vectors, the phylostratum vector and the normalized expression vector. By construction, the normalized expression vector satisfies the property \\(\\sum_i^N n_i(s)=1\\). The space of possible normalized expression vectors is then the N-simplex.\n\n\nCode\nusing Plots\n\nvertices = [\n    [1.0, 0.0, 0.0],  # Unit vector in x direction\n    [0.0, 1.0, 0.0],  # Unit vector in y direction\n]\n\n# Create the plot\np = plot(\n    xlabel=\"X\", ylabel=\"Y\",\n    title=\"Standard 1-Simplex\",\n    legend=false,\n    aspect_ratio=:equal,\n)\n\n# Plot all edges of the tetrahedron\nfor i in 1:2\n    for j in (i+1):2\n        v1, v2 = vertices[i], vertices[j]\n        plot!(p, [v1[1], v2[1]], [v1[2], v2[2]], \n              color=:blue, linewidth=2)\n    end\nend\n\n# Plot vertices as points\nscatter!(p, [v[1] for v in vertices], [v[2] for v in vertices], \n         color=:blue, markersize=5)\n\n# Set the axis limits\nplot!(p, xlim=(-0.1, 2.5), ylim=(-0.1, 2.5))\n\n# Display the plot\nvector = [1, 2]\nquiver!(p, [0], [0], quiver=([vector[1]], [vector[2]]), \n        color=:purple, linewidth=2, arrow=arrow(:closed, 0.1))\n\nexp_vec = [\n    [1, 0],\n    [0, 1],\n    [0.5, 0.5]\n]\n\nfor v in exp_vec\n    quiver!(p, [0], [0], quiver=([v[1]], [v[2]]), color=:red, linewidth=2, arrow=arrow(:closed, 0.1))\nend\n\ndisplay(p)\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 1: 2-Gene Simplex Plot\n\n\n\n\nThis diagram depicts an example with 2 genes, in this case the possible normalized expression vectors are shown as the blue simplex, with 3 example expressions shown as the red vectors. A hypothetical phylostratum vector with gene age 1 for gene X and age 2 for gene Y is shown in purple, but this analysis does not depend on the particular form of \\(p_i\\). What happens when we calculate the TAI for different possible normalized expression vectors along the simplex (blue)? In general, the dot product can be calculated as \\[\\langle p_i,n_i(s) \\rangle = \\left\\lVert p_i\\right\\rVert \\left\\lVert n_i(s)\\right\\rVert cos(\\theta)\\]\nWhen comparing the TAI between different stages, the phylostratum vector is fixed, so \\(\\left\\lVert p_i\\right\\rVert\\) is constant. As expression patterns change between stages however, we would like to see how these changes affect the projection of \\(n_i(s)\\) onto \\(p_i\\). This projection has 2 components, \\(\\left\\lVert n_i(s)\\right\\rVert\\) and \\(cos(\\theta)\\). However, the magnitude of \\(n_i(s)\\) is not constant, in fact near the vertices, the magnitude is larger than near the center of the simplex (equal expression of all genes). This implies that in this formulation, stages which have fewer genes expressed or a small number of more highly expressed genes (and thus normalized expression vectors nearer to the vertices) will have a necessarily larger TAIs regardless of which genes are expressed. This is not a feature we would like to have in the TAI, and in fact this feature gets much worse the more genes we have. In the 2 gene example, the magnitude of \\(n_i\\) at the center is \\(0.7071\\) times the magnitudes at the vertices. As the number of genes goes up, this factor decreases even more.\n\n\nCode\nusing LinearAlgebra  # For the norm() function\nusing Plots  # For plotting\n\n# Initialize an array to store the norms\nl = zeros(999)\n\n# Main loop\nfor i in 2:1000\n    x = ones(i)  # In Julia, this creates a vector, not a matrix\n    x = x / sum(x)\n    l[i-1] = norm(x)\nend\n\n# Plot the results\nplot(l, xlabel=\"Number of Genes\", ylabel=\"Magnitude of Center\", title=\"Norm of Centered Expression Vector\")\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 2: Magnitude of the center vector\n\n\n\n\nThe simple solution is to transform the expression vectors so that they all have unit length. This is easy enough to do, but because these values fall on a simplex, taking the square root of the normalized expression vector is a convenient way to carry out this transformation. This works because \\(\\sum_i^N n_i(s)=1\\), thus if we take the square root at this stage, and let \\(r_i(s)= \\sqrt{n_i(s)}\\).\n\\[\\sum_i^N r_i(s)^2=1\\] and thus the \\[\\left\\lVert r(s)\\right\\rVert = \\sqrt{\\sum_i^N r_i(s)^2} = 1\\]\nNow the set of possible transformed expression vectors is the unit N-sphere rather than the simplex.\n\n\nCode\nusing Plots\n\nvertices = [\n    [1.0, 0.0, 0.0],  # Unit vector in x direction\n    [0.0, 1.0, 0.0],  # Unit vector in y direction\n]\n\n# Create the plot\np = plot(\n    xlabel=\"X\", ylabel=\"Y\",\n    title=\"Standard 1-Sphere\",\n    legend=false,\n    aspect_ratio=:equal,\n)\n\n# Plot n-sphere\nfunction quarter_circle(t)\n    x = cos.(t)\n    y = sin.(t)\n    return x, y\nend\n\n# Generate points\nt = range(0, π/2, length=100)\nx, y = quarter_circle(t)\n\n# Create the plot\nplot!(x, y, \n    aspect_ratio=:equal, \n    label=\"Quarter Circle\",\n    linewidth=2,\n    color=:blue\n)\n\n# Plot vertices as points\nscatter!(p, [v[1] for v in vertices], [v[2] for v in vertices], \n         color=:blue, markersize=5)\n\n# Set the axis limits\nplot!(p, xlim=(-0.1, 2.5), ylim=(-0.1, 2.5))\n\n# Display the plot\nvector = [1, 2]\nquiver!(p, [0], [0], quiver=([vector[1]], [vector[2]]), \n        color=:purple, linewidth=2, arrow=arrow(:closed, 0.1))\n\nexp_vec = [\n    [1, 0],\n    [0, 1],\n    [0.7071, 0.7071]\n]\n\nfor v in exp_vec\n    quiver!(p, [0], [0], quiver=([v[1]], [v[2]]), color=:red, linewidth=2, arrow=arrow(:closed, 0.1))\nend\n\ndisplay(p)\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3: 2-Gene Sphere Plot\n\n\n\n\nThe issue of the form of \\(p_i\\), for example whether it should be a quantile rank, is separate from this issue."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Living Physics Lab Notes",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "tech.html",
    "href": "tech.html",
    "title": "Technical Notes",
    "section": "",
    "text": "TAI Note\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  }
]